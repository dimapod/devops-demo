---
resources:
- name: devops-infra
  type: git
  source:
    uri: https://github.com/dimapod/devops-demo.git

- name: application-rc
  type: s3
  source:
    bucket: dpo-devops
    region_name: eu-central-1
    regexp: gs-spring-boot-(.*).jar
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: base-image-s3
  type: s3
  source:
    bucket: dpo-devops
    region_name: eu-central-1
    versioned_file: base-image-id
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: application-image-s3
  type: s3
  source:
    bucket: dpo-devops
    region_name: eu-central-1
    versioned_file: application-image-id
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: infra-description-s3
  type: s3
  source:
    bucket: dpo-devops
    region_name: eu-central-1
    versioned_file: terraform.tfstate
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: application-ip-s3
  type: s3
  source:
    bucket: dpo-devops
    region_name: eu-central-1
    versioned_file: application-ip
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

jobs:
# QA: Testing / Build
- name: QA
  public: true
  serial: true
  plan:
  - get: devops-infra
    trigger: true

  - task: app-tests
    file: devops-infra/infra/concourse/pipeline/build/task_run_tests.yml

  - put: application-rc
    params:
      {file: gs-bundle/target/gs-spring-boot-*.jar}


# QA: Creating application image from base image (aws ami)
- name: application-image
  public: true
  serial: true
  plan:
  - get: devops-infra
  - get: base-image-s3
    trigger: true
  - get: application-rc
    passed: [QA]
    trigger: true

  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: xebiafrance/packer-ansible
          tag: '1.9.4'
      inputs:
        - name: devops-infra
        - name: application-rc
        - name: base-image-s3
      outputs:
        - name: golden-application-image
      run:
        path: devops-infra/infra/concourse/pipeline/build/build_application_image.sh
    params:
      AWS_ACCESS_KEY_ID: {{s3-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{s3-secret-access-key}}

  - put: application-image-s3
    params:
      {file: golden-application-image/application-image-id}

# Infrastructure plan
- name: infra-plan
  serial: true
  public: true
  serial_groups: ["infra"]
  plan:
  - get: devops-infra
  - get: application-image-s3
    passed: [application-image]
    trigger: true
  - get: infra-description-s3

  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: uzyexe/terraform
      inputs:
        - name: devops-infra
        - name: application-image-s3
        - name: infra-description-s3
      outputs:
        - name: infra-description
      run:
        path: devops-infra/infra/concourse/pipeline/build/infra_deploy.sh
        args: ["plan"]
    params:
      AWS_ACCESS_KEY_ID: {{s3-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{s3-secret-access-key}}

# Infrastructure apply
- name: infra-apply
  serial: true
  public: true
  serial_groups: ["infra"]
  plan:
  - get: devops-infra
  - get: infra-description-s3
  - get: application-image-s3
    passed: [infra-plan]

  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: uzyexe/terraform
      inputs:
        - name: devops-infra
        - name: application-image-s3
        - name: infra-description-s3
      outputs:
        - name: infra-description
      run:
        path: devops-infra/infra/concourse/pipeline/build/infra_deploy.sh
        args: ["apply"]
    params:
      AWS_ACCESS_KEY_ID: {{s3-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{s3-secret-access-key}}

  - put: infra-description-s3
    params:
      {file: infra-description/terraform.tfstate}
  - put: application-ip-s3
    params:
      {file: infra-description/application-ip}
